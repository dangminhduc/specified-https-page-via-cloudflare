proxy_cache_path  /mnt/var/cache/nginx/mediafactory-user levels=1:2 keys_zone=mediafactory-user-cache:128m max_size=256m inactive=4h;

upstream mediafactory-user {
 server unix:/srv/www/mediafactory_user/shared/sockets/unicorn.sock fail_timeout=0;
}

server {
  listen 80 default;

  # Let's put all static files like images, js and css in sub-folder: public
  root /srv/www/mediafactory_user/current/public/;

  access_log /var/log/nginx/mediafactory-user-access.log;
  error_log /var/log/nginx/mediafactory-user-error.log;

  # ELB
  set_real_ip_from 10.0.0.0/8;
  real_ip_header X-FORWARDED-FOR;

  # Cloudflare
  set_real_ip_from xxxxxxxxxxxxxxx;

  real_ip_header CF-Connecting-IP;

  # Nginx status
  location /nginx_status {
    stub_status  on;
    access_log  off;
    allow 127.0.0.1;
    deny all;
  }

  # for maintenance
  # set  maintenance flag
  set $maintenance false;

  # if exist /var/tmp/do_maintenance, go maintenance mode
  if (-e /var/tmp/do_maintenance ) {
    set $maintenance true;
  }

  # from office , always maintenace false
  if ($remote_addr = "xxxxxxxx") {
    set $maintenance false;
  }
  if ($http_x_forwarded_for = "xxxxxxx") {
    set $maintenance false;
  }
  if ($http_cf_connecting_ip = "xxxxxx") {
    set $maintenance false;
  }

  # from vpn , always maintenace false
  if ($remote_addr = "xxxxxx") {
    set $maintenance false;
  }
  if ($http_x_forwarded_for = "xxxxxxx") {
    set $maintenance false;
  }
  if ($http_cf_connecting_ip = "xxxxxxx") {
    set $maintenance false;
  }

  # Candidate for redirection if not ending with one of these extensions.
  if ( $request_uri ~ \.(jpg|gif|png|css|js)$ ) {
     set $maintenance false;
  }
  # Candidate for redirection if not a request for the maintenance page
  if ( $request_uri ~ ^/maintenance.html ) {
    set $maintenance false;
  }
  if ( $request_uri ~ ^/healthcheck ) {
    set $maintenance false;
  }

  # if maintence mode is true, redirect to maintenance page
  if ($maintenance = true) {
    rewrite ^ /maintenance.html redirect;
  }

  location = /browserconfig.xml {
    return 404;
  }

  location ~ /apple-touch-icon.* {
    return 404;
  }

  location = /favicon.ico {
    root /srv/www/mediafactory_user/current/public/assets/;
    access_log off;
    log_not_found off;
  }

  if ($request_method = HEAD) {
    return 200;
  }


    location ^~ /assets/ {
      alias  /srv/www/mediafactory_user/current/public/assets/;
      try_files $uri =404;
      error_page 404 = @notfound;
      # cache
      expires 7d;
      add_header Pragma "public";
      add_header Cache-Control "public, must-revalidate, proxy-revalidate";

            gzip_static on;
            gzip_proxied        any;
            gzip_disable        "MSIE [1-6]\.";
            gzip_vary           on;

      proxy_cache         mediafactory-user-cache;
      proxy_cache_valid   200 302  60m;
      proxy_cache_valid   404      1m;
          }
    location @notfound {
      more_set_headers -s 404 "Cache-Control: no-cache, no-store";
      return 404 " ";
    }


    location  /login {
        if ($http_cf_visitor ~ '{"scheme":"http"}'){
                rewrite ^(.*) https://$host$request_uri break;
        }
                proxy_pass          http://mediafactory-user/login;
                proxy_set_header    X-Forwarded-Proto $scheme;
                proxy_set_header    X-NginX-Proxy   true;
                proxy_set_header    Host            $host;
                proxy_redirect      off;
        }


          location / {
      limit_except GET PUT PATCH POST DELETE {
        deny all;
      }
            proxy_pass          http://mediafactory-user;
            proxy_set_header    X-Real-IP       $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    Host            $http_host;
            proxy_set_header    X-NginX-Proxy   true;
            proxy_redirect      off;
          }

  error_page 400 401 403 404 500 501 502 503 504 505 /404.html;
  gzip on;
  gzip_comp_level 2;
  gzip_proxied any;
  gzip_min_length 1000;
  gzip_disable "MSIE [1-6]\."
  gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
}
